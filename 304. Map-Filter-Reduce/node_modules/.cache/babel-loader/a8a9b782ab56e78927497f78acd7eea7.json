{"ast":null,"code":"var numbers = [3, 56, 2, 48, 5];\n\n//Map -Create a new array by doing something with each item in an array.\n\n// function double(x){\n//   return x*2;\n// }\n\n// const newNumbers = numbers.map(double)\n// console.log(newNumbers)\n\n// var newNumbers = [];\n// numbers.forEach(function (x){\n//   newNumbers.push(x*2);\n// })\n\n// console.log(newNumbers)\n\n//Filter - Create a new array by keeping the items that return true.\n\n// const newNumbers = numbers.filter(function (num){\n//   return num < 10\n// })\n\n// console.log(newNumbers)\n\n// var newNumbers = [];\n// numbers.forEach(function(num){\n//   if (num < 10) {\n//     newNumbers.push(num);\n//   }\n// })\n\n// console.log(newNumbers)\n\n//Reduce - Accumulate a value by doing something to each item in an array.\n\nvar newNumber = numbers.reduce(function (accumulator, currentNumber) {\n  console.log(\"accumulator = \" + accumulator);\n  console.log(\"currentNumber = \" + currentNumber);\n  return accumulator + currentNumber;\n});\nconsole.log(newNumber);\nvar newNumber = 0;\nnumbers.forEach(function (currentNumber) {\n  console.log(\"newNumber = \" + newNumber);\n  console.log(\"currentNumber = \" + currentNumber);\n  newNumber += currentNumber;\n});\nconsole.log(newNumber);\n\n//Find - find the first item that matches from an array.\n\n//FindIndex - find the index of the first item that matches.","map":{"version":3,"names":["numbers","newNumber","reduce","accumulator","currentNumber","console","log","forEach"],"sources":["/Users/gabriel/Documents/Cursos/webdev/React/304. Map-Filter-Reduce/src/index.js"],"sourcesContent":["var numbers = [3, 56, 2, 48, 5];\n\n//Map -Create a new array by doing something with each item in an array.\n\n// function double(x){\n//   return x*2;\n// }\n\n// const newNumbers = numbers.map(double)\n// console.log(newNumbers)\n\n// var newNumbers = [];\n// numbers.forEach(function (x){\n//   newNumbers.push(x*2);\n// })\n\n// console.log(newNumbers)\n\n\n//Filter - Create a new array by keeping the items that return true.\n\n\n// const newNumbers = numbers.filter(function (num){\n//   return num < 10\n// })\n\n// console.log(newNumbers)\n\n// var newNumbers = [];\n// numbers.forEach(function(num){\n//   if (num < 10) {\n//     newNumbers.push(num);\n//   }\n// })\n\n// console.log(newNumbers)\n\n\n//Reduce - Accumulate a value by doing something to each item in an array.\n\nvar newNumber = numbers.reduce(function(accumulator, currentNumber){\n  console.log(\"accumulator = \" + accumulator)\n  console.log(\"currentNumber = \" + currentNumber)\n  return accumulator + currentNumber;\n})\n\nconsole.log(newNumber)\n\n\nvar newNumber = 0;\nnumbers.forEach(function (currentNumber){\n  console.log(\"newNumber = \" + newNumber)\n  console.log(\"currentNumber = \" + currentNumber)\n  newNumber += currentNumber\n})\n\nconsole.log(newNumber)\n\n//Find - find the first item that matches from an array.\n\n//FindIndex - find the index of the first item that matches.\n"],"mappings":"AAAA,IAAIA,OAAO,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;;AAE/B;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAGA;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA,IAAIC,SAAS,GAAGD,OAAO,CAACE,MAAM,CAAC,UAASC,WAAW,EAAEC,aAAa,EAAC;EACjEC,OAAO,CAACC,GAAG,CAAC,gBAAgB,GAAGH,WAAW,CAAC;EAC3CE,OAAO,CAACC,GAAG,CAAC,kBAAkB,GAAGF,aAAa,CAAC;EAC/C,OAAOD,WAAW,GAAGC,aAAa;AACpC,CAAC,CAAC;AAEFC,OAAO,CAACC,GAAG,CAACL,SAAS,CAAC;AAGtB,IAAIA,SAAS,GAAG,CAAC;AACjBD,OAAO,CAACO,OAAO,CAAC,UAAUH,aAAa,EAAC;EACtCC,OAAO,CAACC,GAAG,CAAC,cAAc,GAAGL,SAAS,CAAC;EACvCI,OAAO,CAACC,GAAG,CAAC,kBAAkB,GAAGF,aAAa,CAAC;EAC/CH,SAAS,IAAIG,aAAa;AAC5B,CAAC,CAAC;AAEFC,OAAO,CAACC,GAAG,CAACL,SAAS,CAAC;;AAEtB;;AAEA"},"metadata":{},"sourceType":"module"}